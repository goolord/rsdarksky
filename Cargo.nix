
# Generated by crate2nix 0.6.1 with the command:
#   "generate"
# See https://github.com/kolloch/crate2nix for more info.

{ pkgs? import <nixpkgs> { config = {}; },
  lib? pkgs.lib,
  callPackage? pkgs.callPackage,
  stdenv? pkgs.stdenv,
  buildRustCrate? pkgs.buildRustCrate,
  fetchurl? pkgs.fetchurl,
  fetchCrate? pkgs.fetchCrate,
  defaultCrateOverrides? pkgs.defaultCrateOverrides,
  # The features to enable for the root_crate or the workspace_members.
  rootFeatures? ["default"]}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = {
    packageId = "rsdarksky 0.1.0 (path+file:///home/zach/Dev/rsdarksky)";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = buildRustCrateWithFeatures {
      packageId = "rsdarksky 0.1.0 (path+file:///home/zach/Dev/rsdarksky)";
      features = rootFeatures;
    };
  };
  root_crate =
    builtins.trace "root_crate is deprecated since crate2nix 0.4. Please use rootCrate instead." rootCrate.build;
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "rsdarksky" = {
      packageId = "rsdarksky 0.1.0 (path+file:///home/zach/Dev/rsdarksky)";
      build = buildRustCrateWithFeatures {
        packageId = "rsdarksky 0.1.0 (path+file:///home/zach/Dev/rsdarksky)";
        features = rootFeatures;
      };
    };
  };
  workspace_members =
    builtins.trace
      "workspace_members is deprecated in crate2nix 0.4. Please use workspaceMembers instead."
      lib.mapAttrs (n: v: v.build) workspaceMembers;

  #
  # "private" attributes that may change in every new version of crate2nix.
  #

  # Build and dependency information for crates.
  # Many of the fields are passed one-to-one to buildRustCrate.
  #
  # Noteworthy:
  # * `crateBin = [{name = ","; path = ",";}];`: a hack to disable building the binary.
  # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
  #   but with additional information which is used during dependency/feature resolution.
  # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.

  crates = {
    "adler32 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "adler32";
        version = "1.0.3";
        edition = "2015";
        sha256 = "1z3mvjgw02mbqk98kizzibrca01d5wfkpazsrp3vkkv3i56pn6fb";
        authors = [
          "Remi Rampin <remirampin@gmail.com>"
        ];
        features = {
        };
      };
    "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          };
        };
        features = {
        };
      };
    "arrayvec 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arrayvec";
        version = "0.4.9";
        edition = "2015";
        sha256 = "0hyafv26hj0wp96kf3cdq3hjv78ib9cham8j564n65j6gavjcw0s";
        authors = [
          "bluss"
        ];
        dependencies = {
          "nodrop" = {
            packageId = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
      };
    "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "atty";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0by1bj2km9jxi4i4g76zzi76fc2rcm9934jpnyrqd95zw344pb20";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "termion" = {
            packageId = "termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          };
        };
        features = {
        };
      };
    "base64 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "base64";
        version = "0.9.3";
        edition = "2015";
        sha256 = "11hhz8ln4zbpn2h2gm9fbbb9j254wrd4fpmddlyah2rrnqsmmqkd";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "safemem" = "safemem 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitflags";
        version = "1.0.4";
        edition = "2015";
        sha256 = "1g1wmz2001qmfrd37dnd5qiss5njrw26aywmg6yhkmkbyrhjxb08";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byteorder";
        version = "1.2.7";
        edition = "2015";
        sha256 = "0wsl8in6jk2v1n8s8jz0pjd99mjr2isbf981497pgavwg6i11q5h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bytes";
        version = "0.4.11";
        edition = "2015";
        sha256 = "1lk8bnxcd8shiizarf0n6ljmj1542n90jw6lz6i270gxl7rzplmh";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "iovec" = "iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "i128" = [ "byteorder/i128" ];
        };
      };
    "cc 1.0.27 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cc";
        version = "1.0.27";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "03fpdrwpdp2h05izx0mdmzjkignnyj6nfa4kj8f96bl67x661kgj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "rayon" ];
        };
      };
    "cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cfg-if";
        version = "0.1.6";
        edition = "2015";
        sha256 = "11qrix06wagkplyk908i3423ps9m9np6c4vbcq81s9fyl244xv3n";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clap";
        version = "2.32.0";
        edition = "2015";
        sha256 = "1hdjf0janvpjkwrjdjx1mm2aayzr54k72w6mriyr0n5anjkcj1lx";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = {
          "ansi_term" = {
            packageId = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (!target."windows");
          };
          "atty" = {
            packageId = "atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "bitflags" = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "strsim" = {
            packageId = "strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "textwrap" = "textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-width" = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "vec_map" = {
            packageId = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
    "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "1z9lby5sr6vslfd14d6igk03s7awf91mxpsfmsp3prxbxlk0x7h5";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = {
          "bitflags" = {
            packageId = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
    "core-foundation 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "core-foundation";
        version = "0.5.1";
        edition = "2015";
        sha256 = "03s11z23rb1kk325c34rmsbd7k0l5rkzk4q6id55n174z28zqln1";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = {
          "core-foundation-sys" = "core-foundation-sys 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" = [ "core-foundation-sys/mac_os_10_8_features" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
      };
    "core-foundation-sys 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "core-foundation-sys";
        version = "0.5.1";
        edition = "2015";
        sha256 = "0qbrasll5nw1bgr071i8s8jc975d0y4qfysf868bh9xp0f6vcypa";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = {
          "libc" = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crc32fast 1.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crc32fast";
        version = "1.1.2";
        edition = "2015";
        sha256 = "19hjgifwvsgcvhm7f6bqkp4sfijnx3ddiv8szdfwjn3sjn4lysd6";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-deque";
        version = "0.6.3";
        edition = "2015";
        sha256 = "07dahkh6rc09nzg7054rnmxhni263pi9arcyjyy822kg59c0lfz8";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "crossbeam-epoch" = "crossbeam-epoch 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-epoch 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-epoch";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1zs7yvgjrs1xv4fd27wdr23l4dcb23n45krqcnbfzd7yrw0mrwiz";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "arrayvec" = {
            packageId = "arrayvec 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "cfg-if" = "cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = {
            packageId = "crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "lazy_static" = {
            packageId = "lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "memoffset" = "memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "scopeguard" = {
            packageId = "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" "arrayvec/use_union" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.6.3";
        edition = "2015";
        sha256 = "1whyyx07hcfrgxxc6lrwb477r7skpb15ivgyifmm16wp9bmm6ddd";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "dtoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "dtoa";
        version = "0.4.3";
        edition = "2015";
        sha256 = "1xysdxdm24sk5ysim7lps4r2qaxfnj0sbakhmps4d42yssx30cw8";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
    "encoding_rs 0.8.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "encoding_rs";
        version = "0.8.13";
        edition = "2015";
        sha256 = "1a91x1cnw1iz3hc32mvdmwhbqcfx36kk04pnil17mcii1ni6xyy5";
        authors = [
          "Henri Sivonen <hsivonen@hsivonen.fi>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "fast-legacy-encode" = [ "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode" ];
          "simd-accel" = [ "simd" ];
        };
      };
    "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fnv";
        version = "1.0.6";
        edition = "2015";
        sha256 = "128mlh23y3gg6ag5h8iiqlcbl59smisdzraqy88ldrf75kbw27ip";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "foreign-types";
        version = "0.3.2";
        edition = "2015";
        sha256 = "105n8sp2djb1s5lzrw04p7ss3dchr5qa3canmynx396nh3vwm2p8";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "foreign-types-shared" = "foreign-types-shared 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "foreign-types-shared 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "foreign-types-shared";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0b6cnvqbflws8dxywk4589vgbz80049lz4x1g9dfy4s1ppd3g4z5";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        features = {
        };
      };
    "fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuchsia-zircon";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        dependencies = {
          "bitflags" = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "fuchsia-zircon-sys" = "fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuchsia-zircon-sys";
        version = "0.3.3";
        edition = "2015";
        sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        features = {
        };
      };
    "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures";
        version = "0.1.25";
        edition = "2015";
        sha256 = "1gdn9z3mi3jjzbxgvawqh90895130c3ydks55rshja0ncpn985q3";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "use_std" "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" "with-deprecated" ];
      };
    "futures-cpupool 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-cpupool";
        version = "0.1.8";
        edition = "2015";
        sha256 = "0ficd31n5ljiixy6x0vjglhq4fp0v1p4qzxm3v6ymsrb3z080l5c";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "futures" = {
            packageId = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "use_std" ];
          };
          "num_cpus" = "num_cpus 1.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "with-deprecated" ];
          "with-deprecated" = [ "futures/with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
    "h2 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "h2";
        version = "0.1.14";
        edition = "2015";
        sha256 = "0dgjj9s87flz7a95jfjp8227ng0sn7g95vhqmh7hb7kh0rm8nmyk";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "fnv" = "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "http" = "http 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
          "indexmap" = "indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "slab" = "slab 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "string" = "string 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "http 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "http";
        version = "0.1.14";
        edition = "2015";
        sha256 = "1828cz2fh25nmp9rca0yzr548phsvkmzsqhspjnscqg1l9yc1557";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "fnv" = "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "itoa" = "itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "httparse 1.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "httparse";
        version = "1.3.3";
        edition = "2015";
        sha256 = "1jymxy4bl0mzgp2dx0pzqzbr72sw5jmr5sjqiry4xr88z4z9qlyx";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "hyper 0.12.19 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hyper";
        version = "0.12.19";
        edition = "2015";
        sha256 = "1d6ckxaywj58gfshxiqivf0ajyglf32pf8xgimzrrmp9j7mncyb6";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures-cpupool" = {
            packageId = "futures-cpupool 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "h2" = "h2 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
          "http" = "http 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
          "httparse" = "httparse 1.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "iovec" = "iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "itoa" = "itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "net2" = {
            packageId = "net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "time" = "time 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio" = {
            packageId = "tokio 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "tokio-executor" = {
            packageId = "tokio-executor 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-reactor" = {
            packageId = "tokio-reactor 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "tokio-tcp" = {
            packageId = "tokio-tcp 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "tokio-threadpool" = {
            packageId = "tokio-threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "tokio-timer" = {
            packageId = "tokio-timer 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "want" = "want 0.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "__internal_flaky_tests" "runtime" ];
          "runtime" = [ "futures-cpupool" "net2" "tokio" "tokio-executor" "tokio-reactor" "tokio-tcp" "tokio-threadpool" "tokio-timer" ];
        };
        resolvedDefaultFeatures = [ "__internal_flaky_tests" "default" "futures-cpupool" "net2" "runtime" "tokio" "tokio-executor" "tokio-reactor" "tokio-tcp" "tokio-threadpool" "tokio-timer" ];
      };
    "hyper-tls 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hyper-tls";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0sk46mmnccxgxwn62rl5m58c2ivwgxgd590cjwg60pjkhx9qn5r7";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "hyper" = "hyper 0.12.19 (registry+https://github.com/rust-lang/crates.io-index)";
          "native-tls" = "native-tls 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "vendored" = [ "native-tls/vendored" ];
        };
      };
    "idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "idna";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1gwgl19rz5vzi67rrhamczhxy050f5ynx4ybabfapyalv7z1qmjy";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-bidi" = "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-normalization" = "unicode-normalization 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "indexmap";
        version = "1.0.2";
        edition = "2015";
        sha256 = "18a0cn5xy3a7wswxg5lwfg3j4sh5blk28ykw0ysgr486djd353gf";
        authors = [
          "bluss"
          "Josh Stone <cuviper@gmail.com>"
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
      };
    "iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "iovec";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0vjymmb7wj4v4kza5jjn48fcdb85j3k37y7msjl3ifz0p9yiyp2r";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "winapi" = {
            packageId = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
        };
      };
    "itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "itoa";
        version = "0.4.3";
        edition = "2015";
        sha256 = "0zadimmdgvili3gdwxqg7ljv3r4wcdg1kkdfp9nl15vnm23vrhy1";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi" = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "winapi-build" = "winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lazy_static";
        version = "1.2.0";
        edition = "2015";
        sha256 = "07p3b30k2akyr6xw08ggd5qiz5nw3vd3agggj360fcc1njz7d0ss";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
    "lazycell 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lazycell";
        version = "1.2.1";
        edition = "2015";
        sha256 = "1m4h2q9rgxrgc7xjnws1x81lrb68jll8w3pykx1a9bhr29q2mcwm";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Nikita Pekin <contact@nikitapek.in>"
        ];
        features = {
          "nightly-testing" = [ "clippy" "nightly" ];
        };
      };
    "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libc";
        version = "0.2.45";
        edition = "2015";
        sha256 = "0rfhz6blavdirj8nircki5fay3dlvpihdypbazx5lpy2xz6y0w10";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "use_std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "libflate 0.1.19 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libflate";
        version = "0.1.19";
        edition = "2015";
        sha256 = "1klhvys9541xrwspyyv41qbr37xnwx4bdaspk6gbiprhrsqqkjp0";
        authors = [
          "Takeru Ohta <phjgt308@gmail.com>"
        ];
        dependencies = {
          "adler32" = "adler32 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "byteorder" = "byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "crc32fast" = "crc32fast 1.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "lock_api 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lock_api";
        version = "0.1.5";
        edition = "2015";
        sha256 = "132sidr5hvjfkaqm3l95zpcpi8yk5ddd0g79zf1ad4v65sxirqqm";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = {
          "owning_ref" = {
            packageId = "owning_ref 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "scopeguard" = {
            packageId = "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
        };
        resolvedDefaultFeatures = [ "owning_ref" ];
      };
    "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "log";
        version = "0.4.6";
        edition = "2015";
        sha256 = "1nd8dl9mvc9vd6fks5d4gsxaz990xi6rzlb8ymllshmwi153vngr";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "03hl636fg6xggy0a26200xs74amk3k9n0908rga2szn68agyz3cv";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
        };
      };
    "memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memoffset";
        version = "0.2.1";
        edition = "2015";
        sha256 = "00vym01jk9slibq2nsiilgffp7n6k52a4q3n4dqp0xf5kzxvffcf";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        features = {
        };
      };
    "mime 0.3.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "mime";
        version = "0.3.12";
        edition = "2015";
        sha256 = "0lmcwkmxwbla9457w9ak13cfgqxfyn5wa1syjy1kll2ras5xifvh";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "unicase" = "unicase 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "mime_guess 2.0.0-alpha.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "mime_guess";
        version = "2.0.0-alpha.6";
        edition = "2015";
        sha256 = "1k2mdq43gi2qr63b7m5zs624rfi40ysk33cay49jlhq97jwnk9db";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        dependencies = {
          "mime" = "mime 0.3.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "phf" = {
            packageId = "phf 0.7.23 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "unicase" ];
          };
          "unicase" = "unicase 1.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "phf_codegen" = "phf_codegen 0.7.23 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicase" = "unicase 1.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "mio";
        version = "0.6.16";
        edition = "2015";
        sha256 = "14vyrlmf0w984pi7ad9qvmlfj6vrb0wn6i8ik9j87w5za2r3rban";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "fuchsia-zircon" = {
            packageId = "fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "fuchsia");
          };
          "fuchsia-zircon-sys" = {
            packageId = "fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "fuchsia");
          };
          "iovec" = "iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "kernel32-sys" = {
            packageId = "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
          "lazycell" = "lazycell 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "miow" = {
            packageId = "miow 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
          "net2" = "net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)";
          "slab" = "slab 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
          "default" = [ "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
    "mio-uds 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "mio-uds";
        version = "0.6.7";
        edition = "2015";
        sha256 = "1gff9908pvvysv7zgxvyxy7x34fnhs088cr0j8mgwj8j24mswrhm";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "iovec" = {
            packageId = "iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "mio" = {
            packageId = "mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
        };
        features = {
        };
      };
    "miow 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "miow";
        version = "0.2.1";
        edition = "2015";
        sha256 = "14f8zkc6ix7mkyis1vsqnim8m29b6l55abkba3p2yz7j1ibcvrl0";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "kernel32-sys" = "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "net2" = {
            packageId = "net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "winapi" = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "ws2_32-sys" = "ws2_32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "native-tls 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "native-tls";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0vl2hmmnrcjfylzjfsbnav20ri2n1qjgxn7bklb4mk3fyxfqm1m9";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "lazy_static" = {
            packageId = "lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = ((target."os" == "macos") || (target."os" == "ios"));
          };
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            target = ((target."os" == "macos") || (target."os" == "ios"));
          };
          "log" = {
            packageId = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "android");
          };
          "openssl" = {
            packageId = "openssl 0.10.16 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          };
          "openssl-probe" = {
            packageId = "openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          };
          "openssl-sys" = {
            packageId = "openssl-sys 0.9.40 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          };
          "schannel" = {
            packageId = "schannel 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
          };
          "security-framework" = {
            packageId = "security-framework 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = ((target."os" == "macos") || (target."os" == "ios"));
          };
          "security-framework-sys" = {
            packageId = "security-framework-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = ((target."os" == "macos") || (target."os" == "ios"));
          };
          "tempfile" = {
            packageId = "tempfile 3.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
            target = ((target."os" == "macos") || (target."os" == "ios"));
          };
        };
        features = {
          "vendored" = [ "openssl/vendored" ];
        };
      };
    "net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "net2";
        version = "0.2.33";
        edition = "2015";
        sha256 = "1qnmajafgybj5wyxz9iffa8x5wgbwd2znfklmhqj7vl6lw1m65mq";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            target = ((target."os" == "redox") || target."unix");
          };
          "winapi" = {
            packageId = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "handleapi" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
          };
        };
        features = {
          "default" = [ "duration" ];
        };
        resolvedDefaultFeatures = [ "default" "duration" ];
      };
    "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "nodrop";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0gkfx6wihr9z0m8nbdhma5pyvbipznjpkzny2d4zkc05b0vnhinb";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
    "num_cpus 1.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num_cpus";
        version = "1.9.0";
        edition = "2015";
        sha256 = "0lv81a9sapkprfsi03rag1mygm9qxhdw2qscdvvx2yb62pc54pvi";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "openssl 0.10.16 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "openssl";
        version = "0.10.16";
        edition = "2015";
        sha256 = "17mi6p323rqkydfwykiba3b1a24j7jv7bmr7j5wai4c32i2khqsm";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "bitflags" = "bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "cfg-if" = "cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "foreign-types" = "foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
          "openssl-sys" = "openssl-sys 0.9.40 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "vendored" = [ "openssl-sys/vendored" ];
        };
      };
    "openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "openssl-probe";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1a89fznx26vvaxyrxdvgf6iwai5xvs6xjvpjin68fgvrslv6n15a";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "openssl-sys 0.9.40 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "openssl-sys";
        version = "0.9.40";
        edition = "2015";
        sha256 = "11dqyk9g2wdwwj21zma71w5hd5d4sw3hm4pnpk8jjh0wjpkgjdvq";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "cc" = "cc 1.0.27 (registry+https://github.com/rust-lang/crates.io-index)";
          "pkg-config" = "pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)";
          "vcpkg" = {
            packageId = "vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "msvc");
          };
        };
        features = {
          "vendored" = [ "openssl-src" ];
        };
      };
    "owning_ref 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "owning_ref";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1m95qpc3hamkw9wlbfzqkzk7h6skyj40zr6sa3ps151slcfnnchm";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = {
          "stable_deref_trait" = "stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "parking_lot 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "parking_lot";
        version = "0.6.4";
        edition = "2015";
        sha256 = "0qwfysx8zfkj72sfcrqvd6pp7lgjmklyixsi3y0g6xjspw876rax";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = {
          "lock_api" = "lock_api 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "parking_lot_core" = "parking_lot_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "default" = [ "owning_ref" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
        };
        resolvedDefaultFeatures = [ "default" "owning_ref" ];
      };
    "parking_lot_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "parking_lot_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0h5p7dys8cx9y6ii4i57ampf7qdr8zmkpn543kd3h7nkhml8bw72";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "rand" = "rand 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "smallvec" = "smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          };
        };
        buildDependencies = {
          "rustc_version" = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
    "percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "percent-encoding";
        version = "1.0.1";
        edition = "2015";
        sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];
        features = {
        };
      };
    "phf 0.7.23 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "phf";
        version = "0.7.23";
        edition = "2015";
        sha256 = "0annmaf9mmm12g2cdwpip32p674pmsf6xpiwa27mz3glmz73y8aq";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "phf_shared" = "phf_shared 0.7.23 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "core" = [ "phf_shared/core" ];
          "unicase" = [ "phf_shared/unicase" ];
        };
        resolvedDefaultFeatures = [ "unicase" ];
      };
    "phf_codegen 0.7.23 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "phf_codegen";
        version = "0.7.23";
        edition = "2015";
        sha256 = "0k5ly0qykw56fxd19iy236wzghqdxq9zxnzcg8nm22cfzw4a35n0";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "phf_generator" = "phf_generator 0.7.23 (registry+https://github.com/rust-lang/crates.io-index)";
          "phf_shared" = "phf_shared 0.7.23 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "phf_generator 0.7.23 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "phf_generator";
        version = "0.7.23";
        edition = "2015";
        sha256 = "106cd0bx3jf7mf2gaa8nx62c1las1w95c5gwsd4yqm5lj2rj4mza";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "phf_shared" = "phf_shared 0.7.23 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "phf_shared 0.7.23 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "phf_shared";
        version = "0.7.23";
        edition = "2015";
        sha256 = "04gzsq9vg9j8cr39hpkddxb0yqjdknvcpnylw112rqamy7ml4fy1";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "siphasher" = "siphasher 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicase" = {
            packageId = "unicase 1.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
        };
        resolvedDefaultFeatures = [ "unicase" ];
      };
    "pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pkg-config";
        version = "0.3.14";
        edition = "2015";
        sha256 = "0207fsarrm412j0dh87lfcas72n8mxar7q3mgflsbsrqnb140sv6";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "rand 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.5.5";
        edition = "2015";
        sha256 = "0d7pnsh57qxhz1ghrzk113ddkn13kf2g758ffnbxq4nhwjfzhlc9";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "cloudabi" = {
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."os" == "cloudabi");
          };
          "fuchsia-zircon" = {
            packageId = "fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."os" == "fuchsia");
          };
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = target."unix";
          };
          "rand_core" = {
            packageId = "rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "winapi" = {
            packageId = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          };
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "i128_support" ];
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
          "std" = [ "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon" ];
        };
        resolvedDefaultFeatures = [ "alloc" "cloudabi" "default" "fuchsia-zircon" "libc" "std" "winapi" ];
      };
    "rand 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.6.1";
        edition = "2015";
        sha256 = "123s3w165iiifmf475lisqkd0kbr7nwnn3k4b1zg2cwap5v9m9bz";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "cloudabi" = {
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."os" == "cloudabi");
          };
          "fuchsia-zircon" = {
            packageId = "fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."os" == "fuchsia");
          };
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "rand_chacha" = "rand_chacha 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_core" = {
            packageId = "rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rand_hc" = "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_isaac" = "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_pcg" = "rand_pcg 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_xorshift" = "rand_xorshift 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          };
        };
        buildDependencies = {
          "rustc_version" = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" = [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-zircon" ];
        };
        resolvedDefaultFeatures = [ "alloc" "cloudabi" "default" "fuchsia-zircon" "libc" "std" "winapi" ];
      };
    "rand_chacha 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_chacha";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0q5pq34cqv1mnibgzd1cmx9q49vkr2lvalkkvizmlld217jmlqc6";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "rustc_version" = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1cxnaxmsirz2wxsajsjkd1wk6lqfqbcprqkha4bq3didznrl22sc";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1vafw316apjys9va3j987s02djhqp7y21v671v3ix0p5j9bjq339";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05agb75j87yp7y1zk8yf7bpm66hc0673r3dlypn0kazynr6fdgkz";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
        };
      };
    "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "10hhdh5b5sa03s6b63y9bafm956jwilx41s71jbrzl63ccx8lxdq";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
    "rand_pcg 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_pcg";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0x6pzldj0c8c7gmr67ni5i7w2f7n7idvs3ckx0fc3wkhwl7wrbza";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "rustc_version" = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "serde1" = [ "serde" "serde_derive" "bincode/i128" ];
        };
      };
    "rand_xorshift 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_xorshift";
        version = "0.1.0";
        edition = "2015";
        sha256 = "063vxb678ki8gq4rx9w7yg5f9i29ig1zwykl67mfsxn0kxlkv2ih";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
    "redox_syscall 0.1.44 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_syscall";
        version = "0.1.44";
        edition = "2015";
        sha256 = "1scnkyq2wlms5cmarw0jgqckj7sl9llb7ammmmxhlm328v9jamiy";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        features = {
        };
      };
    "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_termios";
        version = "0.1.1";
        edition = "2015";
        sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = {
          "redox_syscall" = "redox_syscall 0.1.44 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "remove_dir_all";
        version = "0.5.1";
        edition = "2015";
        sha256 = "1chx3yvfbj46xjz4bzsvps208l46hfbcy0sm98gpiya454n4rrl7";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          };
        };
        features = {
        };
      };
    "reqwest 0.9.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "reqwest";
        version = "0.9.5";
        edition = "2015";
        sha256 = "1y0fq8ifhbgn6bfvjq831svirqszszj7f73ykbd28inwc0xiv2ix";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "base64" = "base64 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "encoding_rs" = "encoding_rs 0.8.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "http" = "http 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)";
          "hyper" = "hyper 0.12.19 (registry+https://github.com/rust-lang/crates.io-index)";
          "hyper-tls" = {
            packageId = "hyper-tls 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "libflate" = "libflate 0.1.19 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "mime" = "mime 0.3.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "mime_guess" = "mime_guess 2.0.0-alpha.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "native-tls" = {
            packageId = "native-tls 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "serde" = "serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_json" = "serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_urlencoded" = "serde_urlencoded 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio" = "tokio 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "url" = "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "uuid" = {
            packageId = "uuid 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "v4" ];
          };
        };
        features = {
          "default" = [ "default-tls" ];
          "default-tls" = [ "hyper-tls" "native-tls" ];
          "hyper-011" = [ "hyper-old-types" ];
        };
        resolvedDefaultFeatures = [ "default" "default-tls" "hyper-tls" "native-tls" ];
      };
    "rsdarksky 0.1.0 (path+file:///home/zach/Dev/rsdarksky)"
      = rec {
        crateName = "rsdarksky";
        version = "0.1.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./.);
        authors = [
          "goolord <zacharyachurchill@gmail.com>"
        ];
        dependencies = {
          "clap" = "clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "reqwest" = "reqwest 0.9.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_json" = "serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "0rgwzbgs3i9fqjm1p4ra3n7frafmpwl29c8lw85kv1rxn7n2zaa7";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = {
          "semver" = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "ryu 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ryu";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0hysqba7hi31xw1jka8jh7qb4m9fx5l6vik55wpc3rpsg46cwgbf";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
    "safemem 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "safemem";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0pr39b468d05f6m7m4alsngmj5p7an8df21apsxbi57k0lmwrr18";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "schannel 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "schannel";
        version = "0.1.14";
        edition = "2015";
        sha256 = "1g0a88jknns1kwn3x1k3ci5y5zvg58pwdg1xrxkrw3cwd2hynm9k";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = {
          "lazy_static" = "lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "lmcons" "minschannel" "securitybaseapi" "schannel" "sspi" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" ];
          };
        };
        features = {
        };
      };
    "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "scopeguard";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "security-framework 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "security-framework";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0qia5g66zmjn57m9swhrkz3cll3bs4061qim6w72v08c2w0pkvsw";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "core-foundation" = "core-foundation 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "core-foundation-sys" = "core-foundation-sys 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
          "security-framework-sys" = "security-framework-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "OSX_10_10" = [ "OSX_10_9" "security-framework-sys/OSX_10_10" ];
          "OSX_10_11" = [ "OSX_10_10" "security-framework-sys/OSX_10_11" ];
          "OSX_10_12" = [ "OSX_10_11" "security-framework-sys/OSX_10_11" ];
          "OSX_10_9" = [ "security-framework-sys/OSX_10_9" ];
        };
      };
    "security-framework-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "security-framework-sys";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0ijxy7bdi4am092hrhm645hcv36xprdx1gjcjmnyw6n78x8sv2iz";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "core-foundation-sys" = "core-foundation-sys 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "OSX_10_10" = [ "OSX_10_9" ];
          "OSX_10_11" = [ "OSX_10_10" ];
          "OSX_10_12" = [ "OSX_10_11" ];
        };
      };
    "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "0azak2lb2wc36s3x15az886kck7rpnksrw14lalm157rg9sc9z63";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = {
          "semver-parser" = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1da66c8413yakx0y15k8c055yna5lyb6fr0fw9318kdwkrk5k12h";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        features = {
        };
      };
    "serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde";
        version = "1.0.82";
        edition = "2015";
        sha256 = "0wi4lar06p506w34rnan7a7h03i0badx753016gxacvsg8pd8wmp";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "alloc" = [ "unstable" ];
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_json";
        version = "1.0.40";
        edition = "2015";
        sha256 = "1wf8lkisjvyg4ghp2fwm3ysymjy66l030l8d7p6033wiayfzpyh3";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "itoa" = "itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "ryu" = "ryu 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "serde_urlencoded 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_urlencoded";
        version = "0.5.4";
        edition = "2015";
        sha256 = "01dbyyr73ilyz3yqfmalhxs9zpsqvfvzj977199lh5v9j7dwh6cc";
        authors = [
          "Anthony Ramine <n.oxyde@gmail.com>"
        ];
        dependencies = {
          "dtoa" = "dtoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "itoa" = "itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)";
          "url" = "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "siphasher 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "siphasher";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1ganj1grxqnkvv4ds3vby039bm999jrr58nfq2x3kjhzkw2bnqkw";
        authors = [
          "Frank Denis <github@pureftpd.org>"
        ];
        features = {
        };
      };
    "slab 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "slab";
        version = "0.4.1";
        edition = "2015";
        sha256 = "0njmznhcjp4aiznybxm7wacnb4q49ch98wizyf4lpn3rg6sjrak4";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        features = {
        };
      };
    "smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "smallvec";
        version = "0.6.7";
        edition = "2015";
        sha256 = "08ql2yi7ry08cqjl9n6vpb6x6zgqzwllzzk9pxj1143xwg503qcx";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        dependencies = {
          "unreachable" = "unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "stable_deref_trait";
        version = "1.1.1";
        edition = "2015";
        sha256 = "1xy9slzslrzr31nlnw52sl1d820b09y61b7f13lqgsn8n7y0l4g8";
        authors = [
          "Robert Grosse <n210241048576@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "string 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "string";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1120qvf02aydqj0k3kpr8d7zybq0y5arnmgmfsdw75r8qwz75wc6";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        features = {
        };
      };
    "strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "strsim";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        features = {
        };
      };
    "tempfile 3.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tempfile";
        version = "3.0.5";
        edition = "2015";
        sha256 = "11xc89br78ypk4g27v51lm2baz57gp6v555i3sxhrj9qlas2iqfl";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "rand" = "rand 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.44 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "remove_dir_all" = "remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "fileapi" "winbase" "handleapi" ];
          };
        };
        features = {
        };
      };
    "termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termion";
        version = "1.5.1";
        edition = "2015";
        sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
        authors = [
          "ticki <Ticki@users.noreply.github.com>"
          "gycos <alexandre.bury@gmail.com>"
          "IGI-111 <igi-111@protonmail.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!(target."os" == "redox"));
          };
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.44 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "redox_termios" = {
            packageId = "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
        };
        features = {
        };
      };
    "textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "textwrap";
        version = "0.10.0";
        edition = "2015";
        sha256 = "1s8d5cna12smhgj0x2y1xphklyk2an1yzbadnj89p1vy5vnjpsas";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = {
          "unicode-width" = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "time 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "time";
        version = "0.1.41";
        edition = "2015";
        sha256 = "0k56037d04zwy1zdznjcyq0q86r84903ixb41xk5sbwmia1k5gqg";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "libc" = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.44 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          };
        };
        features = {
        };
      };
    "tokio 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0jm7qky8f39ya6kbdl1m38s5vlih40w41v6bizdrva0n695cmqf2";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "mio" = "mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-codec" = "tokio-codec 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-current-thread" = "tokio-current-thread 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-executor" = "tokio-executor 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-fs" = "tokio-fs 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-reactor" = "tokio-reactor 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-tcp" = "tokio-tcp 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-threadpool" = "tokio-threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-timer" = "tokio-timer 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-udp" = "tokio-udp 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-uds" = {
            packageId = "tokio-uds 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
        };
        features = {
          "async-await-preview" = [ "tokio-async-await/async-await-preview" ];
        };
      };
    "tokio-codec 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-codec";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0jc9lik540zyj4chbygg1rjh37m3zax8pd4bwcrwjmi1v56qwi4h";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Bryan Burgers <bryan@burgers.io>"
        ];
        dependencies = {
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tokio-current-thread 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-current-thread";
        version = "0.1.4";
        edition = "2015";
        sha256 = "1c92j6pwb7xq4pl9wg2xh4ngms0n59mf575h4x6mlp1jlj3sn2vb";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-executor" = "tokio-executor 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tokio-executor 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-executor";
        version = "0.1.5";
        edition = "2015";
        sha256 = "15j2ybs8w38gncgbxkvp2qsp6wl62ibi3rns0vlwggx7svmx4bf3";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tokio-fs 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-fs";
        version = "0.1.4";
        edition = "2015";
        sha256 = "05bpc1p1apb4jfw18i84agwwar57zn07d7smqvslpzagd9b3sd31";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-threadpool" = "tokio-threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-io";
        version = "0.1.10";
        edition = "2015";
        sha256 = "14d65rqa5rb2msgkz2xn40cavs4m7f4qyi7vnfv98v7f10l9wlay";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tokio-reactor 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-reactor";
        version = "0.1.7";
        edition = "2015";
        sha256 = "1ssrc6gic43lachv7jk97jxzw609sgcsrkwi7chf96sn7nqrhj0z";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "crossbeam-utils" = "crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "mio" = "mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "parking_lot" = "parking_lot 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "slab" = "slab 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-executor" = "tokio-executor 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tokio-tcp 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-tcp";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0yvfwybqnyca24aj9as8rgydamjq0wrd9xbxxkjcasvsdmsv6z1d";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "iovec" = "iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "mio" = "mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-reactor" = "tokio-reactor 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tokio-threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-threadpool";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0ipr0j79mhjjsvc0ma95sj07m0aiyq6rkwgvlalqwhinivl5d39g";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-executor" = "tokio-executor 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tokio-timer 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-timer";
        version = "0.2.8";
        edition = "2015";
        sha256 = "1iqdg6d9780r12n99a8f9q8yrj1sp0l82ly2iza9hx4vxx2dipxv";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "crossbeam-utils" = "crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "slab" = "slab 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-executor" = "tokio-executor 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tokio-udp 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-udp";
        version = "0.1.3";
        edition = "2015";
        sha256 = "1g1x499vqvzwy7xfccr32vwymlx25zpmkx8ppqgifzqwrjnncajf";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "mio" = "mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-codec" = "tokio-codec 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-reactor" = "tokio-reactor 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tokio-uds 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tokio-uds";
        version = "0.2.4";
        edition = "2015";
        sha256 = "16cs6wnkm14wzsbn2s5y2skiavw7drjyga5h34w4ffb3ih230vp3";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = {
          "bytes" = "bytes 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "iovec" = "iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.45 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "mio" = "mio 0.6.16 (registry+https://github.com/rust-lang/crates.io-index)";
          "mio-uds" = "mio-uds 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-codec" = "tokio-codec 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-io" = "tokio-io 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "tokio-reactor" = "tokio-reactor 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "try-lock 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "try-lock";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1k8xc0jpbrmzp0fwghdh6pwzjb9xx2p8yy0xxnnb8065smc5fsrv";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
        };
      };
    "unicase 1.4.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicase";
        version = "1.4.2";
        edition = "2015";
        sha256 = "0rbnhw2mnhcwrij3vczp0sl8zdfmvf2dlh8hly81kj7132kfj0mf";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
        ];
        buildDependencies = {
          "version_check" = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "heap_size" = [ "heapsize" "heapsize_plugin" ];
        };
      };
    "unicase 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicase";
        version = "2.2.0";
        edition = "2015";
        sha256 = "0p8fj4rdjk9k15s552bl6vpidjcf4jzddzkz6vgagb2i84xlvfxc";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        buildDependencies = {
          "version_check" = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-bidi";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = {
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-normalization 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-normalization";
        version = "0.1.7";
        edition = "2015";
        sha256 = "1da2hv800pd0wilmn4idwpgv5p510hjxizjcfv6xzb40xcsjd8gs";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
      };
    "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-width";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unreachable";
        version = "1.0.0";
        edition = "2015";
        sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        dependencies = {
          "void" = {
            packageId = "void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
        };
      };
    "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "url";
        version = "1.7.2";
        edition = "2015";
        sha256 = "0qzrjzd9r1niv7037x4cgnv98fs1vj0k18lpxx890ipc47x5gc09";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "idna" = "idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "percent-encoding" = "percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "heap_size" = [ "heapsize" ];
          "query_encoding" = [ "encoding" ];
        };
      };
    "uuid 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "uuid";
        version = "0.7.1";
        edition = "2015";
        sha256 = "1wh5izr7bssf1j8y3cawj4yfr5pz4cfxgsjlk2gs1vccc848qpbj";
        authors = [
          "Ashley Mannix<ashleymannix@live.com.au>"
          "Christopher Armstrong"
          "Dylan DPC<dylan.dpc@gmail.com>"
          "Hunar Roop Kahlon<hunar.roop@gmail.com>"
        ];
        dependencies = {
          "rand" = {
            packageId = "rand 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "const_fn" = [ "nightly" ];
          "default" = [ "std" ];
          "u128" = [ "byteorder" ];
          "v3" = [ "md5" "rand" ];
          "v4" = [ "rand" ];
          "v5" = [ "sha1" "rand" ];
        };
        resolvedDefaultFeatures = [ "default" "rand" "std" "v4" ];
      };
    "vcpkg 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "vcpkg";
        version = "0.2.6";
        edition = "2015";
        sha256 = "1ig6jqpzzl1z9vk4qywgpfr4hfbd8ny8frqsgm3r449wkc4n1i5x";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];
        features = {
        };
      };
    "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
    "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1yrx9xblmwbafw2firxyqbj8f771kkzfd24n3q7xgwiqyhi0y8qd";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        features = {
        };
      };
    "void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
    "want 0.0.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "want";
        version = "0.0.6";
        edition = "2015";
        sha256 = "03cc2lndz531a4kgql1v9kppyb1yz2abcz5l52j1gg2nypmy3lh8";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "futures" = "futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "try-lock" = "try-lock 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.3.6";
        edition = "2015";
        sha256 = "1d9jfp4cjd82sr1q4dgdlrkvm33zhhav9d7ihr0nivqbncr059m4";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi-i686-pc-windows-gnu" = {
            packageId = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          };
          "winapi-x86_64-pc-windows-gnu" = {
            packageId = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          };
        };
        features = {
        };
        resolvedDefaultFeatures = [ "consoleapi" "errhandlingapi" "fileapi" "handleapi" "lmcons" "minschannel" "minwinbase" "minwindef" "ntdef" "ntsecapi" "ntstatus" "processenv" "profileapi" "schannel" "securitybaseapi" "sspi" "std" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" "winnt" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
      };
    "winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "ws2_32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ws2_32-sys";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1zpy9d9wk11sj17fczfngcj28w4xxjs3b4n036yzpy38dxp4f7kc";
        libName = "ws2_32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi" = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "winapi-build" = "winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
  };

  #
  # crate2nix/default.nix (excerpt start)
  # 

  # Target (platform) data for conditional dependencies.
  # This corresponds roughly to what buildRustCrate is setting.
  target = {
      unix = true;
      windows = false;
      # We don't support tests yet, so this is true for now.
      test = false;

      # This doesn't appear to be officially documented anywhere yet.
      # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
      os = if stdenv.hostPlatform.isDarwin
        then "macos"
        else stdenv.hostPlatform.parsed.kernel.name;
      arch = stdenv.hostPlatform.parsed.cpu.name;
      family = "unix";
      env = "gnu";
      endian = if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian" then "little" else "big";
      pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
      vendor = stdenv.hostPlatform.parsed.vendor.name;
      debug_assertions = false;
  };

  /* Filters common temp files and build files */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let baseName = builtins.baseNameOf (builtins.toString name);
    in ! (
      # Filter out git
      baseName == ".gitignore" ||
      (type == "directory" && baseName == ".git" ) ||

      # Filter out build results
      (type == "directory" && (
        baseName == "target" ||
        baseName == "_site" ||
        baseName == ".sass-cache" ||
        baseName == ".jekyll-metadata" ||
        baseName == "build-artifacts"
        )) ||

      # Filter out nix-build result symlinks
      (type == "symlink" && lib.hasPrefix "result" baseName) ||

      # Filter out IDE config
      (type == "directory" && (
        baseName == ".idea" ||
        baseName == ".vscode"
        )) ||
      lib.hasSuffix ".iml" baseName ||

      # Filter out nix build files
      # lib.hasSuffix ".nix" baseName ||

      # Filter out editor backup / swap files.
      lib.hasSuffix "~" baseName ||
      builtins.match "^\\.sw[a-z]$$" baseName != null ||
      builtins.match "^\\..*\\.sw[a-z]$$" baseName != null ||
      lib.hasSuffix ".tmp" baseName ||
      lib.hasSuffix ".bak" baseName ||
      baseName == "tests.nix"
    );

  /* A restricted overridable version of  buildRustCrateWithFeaturesImpl. */
  buildRustCrateWithFeatures = {packageId, features, crateOverrides ? defaultCrateOverrides}:
    lib.makeOverridable
      ({features, crateOverrides}: buildRustCrateWithFeaturesImpl {inherit packageId features crateOverrides;})
      { inherit features crateOverrides; };

  /* Returns a buildRustCrate derivation for the given packageId and features. */
  buildRustCrateWithFeaturesImpl = { crateConfigs? crates, packageId, features, crateOverrides } @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let mergedFeatures = mergePackageFeatures args;
        buildByPackageId = packageId:
          let features = mergedFeatures."${packageId}" or [];
              crateConfig = lib.filterAttrs (n: v: n != "resolvedDefaultFeatures") crateConfigs."${packageId}";
              dependencies =
                dependencyDerivations buildByPackageId features (crateConfig.dependencies or {});
              buildDependencies =
                dependencyDerivations buildByPackageId features (crateConfig.buildDependencies or {});
              dependenciesWithRenames =
                lib.filterAttrs (n: v: v ? "rename")
                  (crateConfig.buildDependencies or {} // crateConfig.dependencies or {});
              crateRenames =
                lib.mapAttrs (name: value: value.rename or name) dependenciesWithRenames;
          in buildRustCrate (crateConfig // { inherit features dependencies buildDependencies crateRenames; });
    in buildByPackageId packageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations = buildByPackageId: features: dependencies:
    assert (builtins.isFunction buildByPackageId);
    assert (builtins.isList features);
    assert (builtins.isAttrs dependencies);

    let enabledDependencies = filterEnabledDependencies dependencies features;
        depDerivation = dependencyName: dependency:
        buildByPackageId (dependencyPackageId dependency);
    in builtins.attrValues (lib.mapAttrs depDerivation enabledDependencies);

  /* Returns differences between cargo default features and crate2nix default features.
   *
   * This is useful for verifying the feature resolution in crate2nix.
   */
  diffDefaultPackageFeatures = {crateConfigs ? crates, packageId}:
    assert (builtins.isAttrs crateConfigs);

    let prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures {inherit crateConfigs packageId; features = ["default"]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo = builtins.attrNames (lib.filterAttrs (n: v: !(v ? "crate2nix" ) && (v ? "cargo")) combined);
        onlyInCrate2Nix = builtins.attrNames (lib.filterAttrs (n: v: (v ? "crate2nix" ) && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (n: v:
          (v ? "crate2nix" )
          && (v ? "cargo")
          && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or []))
          combined;
    in builtins.toJSON { inherit onlyInCargo onlyInCrate2Nix differentFeatures; };

  /* Returns the feature configuration by package id for the given input crate. */
  mergePackageFeatures = {crateConfigs ? crates, packageId, features, ...} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let packageFeatures = listOfPackageFeatures args;
        grouped = lib.groupBy (x: x.packageId) packageFeatures;
    in lib.mapAttrs (n: v: sortedUnique (builtins.concatLists (builtins.map (v: v.features) v))) grouped;

  /* Returns a { packageId, features } attribute set for every package needed for building the
     package for the given packageId with the given features.

     Returns multiple, potentially conflicting attribute sets for dependencies that are reachable
     by multiple paths in the dependency tree.
  */
  listOfPackageFeatures = {crateConfigs ? crates, packageId, features, dependencyPath? [packageId], ...} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependencyName: dependency:
          let packageId = dependencyPackageId dependency;
              features = dependencyFeatures expandedFeatures dependencyName dependency;
          in { inherit packageId features; };

        resolveDependencies = path: dependencies:
          assert (builtins.isAttrs dependencies);

          let enabledDependencies = filterEnabledDependencies dependencies expandedFeatures;
              directDependencies =
                builtins.attrValues (lib.mapAttrs depWithResolvedFeatures enabledDependencies);
          in builtins.concatMap
            ({packageId, features}: listOfPackageFeatures {
              # This is purely for debugging.
              dependencyPath = dependencyPath ++ [path packageId];
              inherit crateConfigs packageId features;
            })
             directDependencies;

        resolvedDependencies = builtins.concatLists
          [
            (resolveDependencies "dependencies" (crateConfig.dependencies or {}))
            (resolveDependencies "buildDependencies" (crateConfig.buildDependencies or {}))
          ];

    in [{inherit packageId; features = expandedFeatures;}] ++ resolvedDependencies;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = dependencies: features:
    assert (builtins.isAttrs dependencies);
    assert (builtins.isList features);

    lib.filterAttrs
      (depName: dep:
        builtins.isString dep
        || dep.target or true
        && (!(dep.optional or false) || builtins.any (doesFeatureEnableDependency depName) features))
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = depName: feature:
    let prefix = "${depName}/";
        len = builtins.stringLength prefix;
        startsWithPrefix = builtins.substring 0 len feature == prefix;
    in feature == depName || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further feature names to enable in case this
     feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);

    let expandFeature = feature:
          assert (builtins.isString feature);
          [feature] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
        outFeatures = builtins.concatMap expandFeature inputFeatures;
    in sortedUnique outFeatures;

  /* The package ID of the given dependency. */
  dependencyPackageId = dependency: if builtins.isString dependency then dependency else dependency.packageId;

  /* Returns the actual dependencies for the given dependency. */
  dependencyFeatures = features: dependencyName: dependency:
    assert (builtins.isList features);
    assert (builtins.isString dependencyName);
    assert (builtins.isAttrs dependency || builtins.isString dependency);

    let defaultOrNil = if builtins.isString dependency || dependency.usesDefaultFeatures or true
                       then ["default"]
                       else [];
        explicitFeatures = if builtins.isString dependency then [] else dependency.features or [];
        additionalDependencyFeatures =

          let dependencyPrefix = dependencyName+"/";
              dependencyFeatures =
                builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
          in builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);

    let outFeaturesSet = lib.foldl (set: feature: set // {"${feature}" = 1;} ) {} features;
        outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in builtins.sort (a: b: a < b) outFeaturesUnique;

  #
  # crate2nix/default.nix (excerpt end)
  # 

}
